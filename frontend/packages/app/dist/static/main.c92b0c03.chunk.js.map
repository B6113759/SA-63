{"version":3,"sources":["webpack:///C:/SA-63/frontend/plugins/welcome/src/api/runtime.ts","webpack:///C:/SA-63/frontend/plugins/welcome/src/api/models/EntCoolroom.ts","webpack:///C:/SA-63/frontend/plugins/welcome/src/api/models/EntCoolroomEdges.ts","webpack:///C:/SA-63/frontend/plugins/welcome/src/api/models/EntCoolroomType.ts","webpack:///C:/SA-63/frontend/plugins/welcome/src/api/models/EntCoolroomTypeEdges.ts","webpack:///C:/SA-63/frontend/plugins/welcome/src/api/models/EntDeceasedReceive.ts","webpack:///C:/SA-63/frontend/plugins/welcome/src/api/models/EntDeceasedReceiveEdges.ts","webpack:///C:/SA-63/frontend/plugins/welcome/src/api/models/EntRelative.ts","webpack:///C:/SA-63/frontend/plugins/welcome/src/api/models/EntRelativeEdges.ts","webpack:///C:/SA-63/frontend/plugins/welcome/src/api/models/EntUser.ts","webpack:///C:/SA-63/frontend/plugins/welcome/src/api/models/EntUserEdges.ts","webpack:///C:/SA-63/frontend/plugins/welcome/src/api/apis/DefaultApi.ts","webpack:///C:/SA-63/frontend/plugins/welcome/src/components/Table/Tables.tsx","webpack:///C:/SA-63/frontend/plugins/welcome/src/components/WelcomePage/WelcomePage.tsx","webpack:///C:/SA-63/frontend/plugins/welcome/src/components/Users/Create.tsx","webpack:///C:/SA-63/frontend/plugins/welcome/src/plugin.ts","webpack:///./src/App.tsx","webpack:///./src/index.tsx"],"names":["BASE_PATH","replace","BaseAPI","configuration","Configuration","this","prototype","__init","call","middleware","middlewares","next","clone","concat","preMiddlewares","map","pre","withMiddleware","postMiddlewares","post","context","url","init","createFetchParams","response","fetchApi","status","basePath","path","undefined","query","Object","keys","length","queryParamsStringify","body","FormData","URLSearchParams","value","Blob","JSON","stringify","headers","assign","method","credentials","async","fetchParams","fetch","constructor","slice","RequiredError","Error","name","field","msg","super","__init2","window","bind","querystring","username","password","apiKey","accessToken","exists","json","key","params","prefix","fullKey","Array","multiValue","singleValue","encodeURIComponent","String","join","filter","part","JSONApiResponse","raw","transformer","jsonValue","EntCoolroomFromJSON","ignoreDiscriminator","EntCoolroomEdgesFromJSON","EntCoolroomFromJSONTyped","EntCoolroomToJSON","cOOLROOMCAPACITY","cOOLROOMID","cOOLROOMNAME","EntCoolroomEdgesToJSON","edges","id","EntCoolroomTypeFromJSON","EntDeceasedReceiveFromJSON","EntCoolroomEdgesFromJSONTyped","EntCoolroomTypeToJSON","coolroomtypeid","deceasedReceives","EntDeceasedReceiveToJSON","EntCoolroomTypeEdgesFromJSON","EntCoolroomTypeFromJSONTyped","cOOLROOMTYPEID","cOOLROOMTYPENAME","EntCoolroomTypeEdgesToJSON","EntCoolroomTypeEdgesFromJSONTyped","coolrooms","EntDeceasedReceiveEdgesFromJSON","EntDeceasedReceiveFromJSONTyped","dEATHTIME","dECEASEDID","dECEASEDNAME","EntDeceasedReceiveEdgesToJSON","EntUserFromJSON","EntRelativeFromJSON","EntDeceasedReceiveEdgesFromJSONTyped","coolroomid","EntUserToJSON","doctorid","EntRelativeToJSON","relativeid","EntRelativeEdgesFromJSON","EntRelativeFromJSONTyped","rELATIVEID","rELATIVENAME","EntRelativeEdgesToJSON","EntRelativeEdgesFromJSONTyped","EntUserEdgesFromJSON","EntUserFromJSONTyped","dOCTOREMAIL","dOCTORID","dOCTORNAME","EntUserEdgesToJSON","EntUserEdgesFromJSONTyped","requestParameters","coolroom","headerParameters","request","createCoolroomRaw","coolroomtype","createCoolroomtypeRaw","deceasedreceive","createDeceasedreceiveRaw","relative","createRelativeRaw","user","createUserRaw","deleteCoolroomRaw","deleteCoolroomtypeRaw","deleteDeceasedreceiveRaw","deleteRelativeRaw","deleteUserRaw","getCoolroomRaw","getCoolroomtypeRaw","getDeceasedreceiveRaw","getRelativeRaw","getUserRaw","queryParameters","limit","offset","listCoolroomRaw","listCoolroomtypeRaw","listDeceasedreceiveRaw","listRelativeRaw","listUserRaw","updateCoolroomRaw","updateCoolroomtypeRaw","updateDeceasedreceiveRaw","updateRelativeRaw","updateUserRaw","useStyles","makeStyles","table","minWidth","ComponentsTable","classes","api","deceasedreceives","setDeceasedreceives","loading","setLoading","res","listDeceasedreceive","getDeceasedreceives","createElement","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","align","TableBody","item","Button","onClick","deleteDeceasedreceive","deleteDeceasedreceives","style","marginLeft","variant","color","theme","home","title","subtitle","Typography","marginRight","to","backgroundColor","createStyles","root","display","flexWrap","justifyContent","margin","spacing","withoutLabel","marginTop","textField","width","Create","deceased","setDeceased","setStatus","alert","setAlert","setCoolrooms","coolroomtypes","setCoolroomTypes","relatives","setRelatives","deathtime","setDeathtime","setcoolroom","useState","Number","typeid","setDeadStatus","setRelative","listCoolroomtype","getCoolroomTypes","listCoolroom","getCoolrooms","listRelative","getRelatives","Alert","severity","noValidate","autoComplete","FormControl","TextField","label","type","size","onChange","event","target","InputLabel","Select","labelId","MenuItem","setfilterid","InputLabelProps","shrink","createDeceasedreceive","setTimeout","CreateDeceasedReceive","router","registerRoute","app","plugins","values","AppProvider","getProvider","AppRouter","getRouter","AppRoutes","getRoutes","render","document","getElementById"],"mappings":"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","file":"static/main.c92b0c03.chunk.js","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * SUT SA Example API\n * This is a sample server for SUT SE 2563\n *\n * The version of the OpenAPI document: 1.0\n * Contact: support@swagger.io\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport const BASE_PATH = \"http://localhost:8080/api/v1\".replace(/\\/+$/, \"\");\n\nconst isBlob = (value) => typeof Blob !== 'undefined' && value instanceof Blob;\n\n/**\n * This is the base class for all generated API classes.\n */\nexport class BaseAPI {\n\n    \n\n    constructor( configuration = new Configuration()) {;this.configuration = configuration;BaseAPI.prototype.__init.call(this);\n        this.middleware = configuration.middleware;\n    }\n\n    withMiddleware( ...middlewares) {\n        const next = this.clone();\n        next.middleware = next.middleware.concat(...middlewares);\n        return next;\n    }\n\n    withPreMiddleware( ...preMiddlewares) {\n        const middlewares = preMiddlewares.map((pre) => ({ pre }));\n        return this.withMiddleware(...middlewares);\n    }\n\n    withPostMiddleware( ...postMiddlewares) {\n        const middlewares = postMiddlewares.map((post) => ({ post }));\n        return this.withMiddleware(...middlewares);\n    }\n\n     async request(context) {\n        const { url, init } = this.createFetchParams(context);\n        const response = await this.fetchApi(url, init);\n        if (response.status >= 200 && response.status < 300) {\n            return response;\n        }\n        throw response;\n    }\n\n     createFetchParams(context) {\n        let url = this.configuration.basePath + context.path;\n        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n            // only add the querystring to the URL if there are query parameters.\n            // this is done to avoid urls ending with a \"?\" character which buggy webservers\n            // do not handle correctly sometimes.\n            url += '?' + this.configuration.queryParamsStringify(context.query);\n        }\n        const body = ((typeof FormData !== \"undefined\" && context.body instanceof FormData) || context.body instanceof URLSearchParams || isBlob(context.body))\n\t    ? context.body\n\t    : JSON.stringify(context.body);\n\n        const headers = Object.assign({}, this.configuration.headers, context.headers);\n        const init = {\n            method: context.method,\n            headers: headers,\n            body,\n            credentials: this.configuration.credentials\n        };\n        return { url, init };\n    }\n\n     __init() {this.fetchApi = async (url, init) => {\n        let fetchParams = { url, init };\n        for (const middleware of this.middleware) {\n            if (middleware.pre) {\n                fetchParams = await middleware.pre({\n                    fetch: this.fetchApi,\n                    ...fetchParams,\n                }) || fetchParams;\n            }\n        }\n        let response = await this.configuration.fetchApi(fetchParams.url, fetchParams.init);\n        for (const middleware of this.middleware) {\n            if (middleware.post) {\n                response = await middleware.post({\n                    fetch: this.fetchApi,\n                    url,\n                    init,\n                    response: response.clone(),\n                }) || response;\n            }\n        }\n        return response;\n    }}\n\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n     clone() {\n        const constructor = this.constructor ;\n        const next = new constructor(this.configuration);\n        next.middleware = this.middleware.slice();\n        return next;\n    }\n};\n\nexport class RequiredError extends Error {\n    __init2() {this.name = \"RequiredError\"}\n    constructor( field, msg) {\n        super(msg);this.field = field;RequiredError.prototype.__init2.call(this);;\n    }\n}\n\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport class Configuration {\n    constructor( configuration = {}) {;this.configuration = configuration;}\n\n    get basePath() {\n        return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH;\n    }\n\n    get fetchApi() {\n        return this.configuration.fetchApi || window.fetch.bind(window);\n    }\n\n    get middleware() {\n        return this.configuration.middleware || [];\n    }\n\n    get queryParamsStringify() {\n        return this.configuration.queryParamsStringify || querystring;\n    }\n\n    get username() {\n        return this.configuration.username;\n    }\n\n    get password() {\n        return this.configuration.password;\n    }\n\n    get apiKey() {\n        const apiKey = this.configuration.apiKey;\n        if (apiKey) {\n            return typeof apiKey === 'function' ? apiKey : () => apiKey;\n        }\n        return undefined;\n    }\n\n    get accessToken() {\n        const accessToken = this.configuration.accessToken;\n        if (accessToken) {\n            return typeof accessToken === 'function' ? accessToken : () => accessToken;\n        }\n        return undefined;\n    }\n\n    get headers() {\n        return this.configuration.headers;\n    }\n\n    get credentials() {\n        return this.configuration.credentials;\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport function exists(json, key) {\n    const value = json[key];\n    return value !== null && value !== undefined;\n}\n\nexport function querystring(params, prefix = '') {\n    return Object.keys(params)\n        .map((key) => {\n            const fullKey = prefix + (prefix.length ? `[${key}]` : key);\n            const value = params[key];\n            if (value instanceof Array) {\n                const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))\n                    .join(`&${encodeURIComponent(fullKey)}=`);\n                return `${encodeURIComponent(fullKey)}=${multiValue}`;\n            }\n            if (value instanceof Object) {\n                return querystring(value , fullKey);\n            }\n            return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\n        })\n        .filter(part => part.length > 0)\n        .join('&');\n}\n\nexport function mapValues(data, fn) {\n  return Object.keys(data).reduce(\n    (acc, key) => ({ ...acc, [key]: fn(data[key]) }),\n    {}\n  );\n}\n\nexport function canConsumeForm(consumes) {\n    for (const consume of consumes) {\n        if ('multipart/form-data' === consume.contentType) {\n            return true;\n        }\n    }\n    return false;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport class JSONApiResponse {\n    constructor( raw,  transformer = (jsonValue) => jsonValue) {;this.raw = raw;this.transformer = transformer;}\n\n    async value() {\n        return this.transformer(await this.raw.json());\n    }\n}\n\nexport class VoidApiResponse {\n    constructor( raw) {;this.raw = raw;}\n\n    async value() {\n        return undefined;\n    }\n}\n\nexport class BlobApiResponse {\n    constructor( raw) {;this.raw = raw;}\n\n    async value() {\n        return await this.raw.blob();\n    };\n}\n\nexport class TextApiResponse {\n    constructor( raw) {;this.raw = raw;}\n\n    async value() {\n        return await this.raw.text();\n    };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * SUT SA Example API\n * This is a sample server for SUT SE 2563\n *\n * The version of the OpenAPI document: 1.0\n * Contact: support@swagger.io\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, } from '../runtime';\nimport {\n\n    EntCoolroomEdgesFromJSON,\n\n    EntCoolroomEdgesToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EntCoolroom\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport function EntCoolroomFromJSON(json) {\n    return EntCoolroomFromJSONTyped(json, false);\n}\n\nexport function EntCoolroomFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'cOOLROOMCAPACITY': !exists(json, 'COOLROOM_CAPACITY') ? undefined : json['COOLROOM_CAPACITY'],\n        'cOOLROOMID': !exists(json, 'COOLROOM_ID') ? undefined : json['COOLROOM_ID'],\n        'cOOLROOMNAME': !exists(json, 'COOLROOM_NAME') ? undefined : json['COOLROOM_NAME'],\n        'edges': !exists(json, 'edges') ? undefined : EntCoolroomEdgesFromJSON(json['edges']),\n        'id': !exists(json, 'id') ? undefined : json['id'],\n    };\n}\n\nexport function EntCoolroomToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'COOLROOM_CAPACITY': value.cOOLROOMCAPACITY,\n        'COOLROOM_ID': value.cOOLROOMID,\n        'COOLROOM_NAME': value.cOOLROOMNAME,\n        'edges': EntCoolroomEdgesToJSON(value.edges),\n        'id': value.id,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * SUT SA Example API\n * This is a sample server for SUT SE 2563\n *\n * The version of the OpenAPI document: 1.0\n * Contact: support@swagger.io\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, } from '../runtime';\nimport {\n\n    EntCoolroomTypeFromJSON,\n\n    EntCoolroomTypeToJSON,\n\n    EntDeceasedReceiveFromJSON,\n\n    EntDeceasedReceiveToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EntCoolroomEdges\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport function EntCoolroomEdgesFromJSON(json) {\n    return EntCoolroomEdgesFromJSONTyped(json, false);\n}\n\nexport function EntCoolroomEdgesFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'coolroomtypeid': !exists(json, 'coolroomtypeid') ? undefined : EntCoolroomTypeFromJSON(json['coolroomtypeid']),\n        'deceasedReceives': !exists(json, 'deceasedReceives') ? undefined : ((json['deceasedReceives'] ).map(EntDeceasedReceiveFromJSON)),\n    };\n}\n\nexport function EntCoolroomEdgesToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'coolroomtypeid': EntCoolroomTypeToJSON(value.coolroomtypeid),\n        'deceasedReceives': value.deceasedReceives === undefined ? undefined : ((value.deceasedReceives ).map(EntDeceasedReceiveToJSON)),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * SUT SA Example API\n * This is a sample server for SUT SE 2563\n *\n * The version of the OpenAPI document: 1.0\n * Contact: support@swagger.io\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, } from '../runtime';\nimport {\n\n    EntCoolroomTypeEdgesFromJSON,\n\n    EntCoolroomTypeEdgesToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EntCoolroomType\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport function EntCoolroomTypeFromJSON(json) {\n    return EntCoolroomTypeFromJSONTyped(json, false);\n}\n\nexport function EntCoolroomTypeFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'cOOLROOMTYPEID': !exists(json, 'COOLROOM_TYPE_ID') ? undefined : json['COOLROOM_TYPE_ID'],\n        'cOOLROOMTYPENAME': !exists(json, 'COOLROOM_TYPE_NAME') ? undefined : json['COOLROOM_TYPE_NAME'],\n        'edges': !exists(json, 'edges') ? undefined : EntCoolroomTypeEdgesFromJSON(json['edges']),\n        'id': !exists(json, 'id') ? undefined : json['id'],\n    };\n}\n\nexport function EntCoolroomTypeToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'COOLROOM_TYPE_ID': value.cOOLROOMTYPEID,\n        'COOLROOM_TYPE_NAME': value.cOOLROOMTYPENAME,\n        'edges': EntCoolroomTypeEdgesToJSON(value.edges),\n        'id': value.id,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * SUT SA Example API\n * This is a sample server for SUT SE 2563\n *\n * The version of the OpenAPI document: 1.0\n * Contact: support@swagger.io\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, } from '../runtime';\nimport {\n\n    EntCoolroomFromJSON,\n\n    EntCoolroomToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EntCoolroomTypeEdges\n */\n\n\n\n\n\n\n\n\n\nexport function EntCoolroomTypeEdgesFromJSON(json) {\n    return EntCoolroomTypeEdgesFromJSONTyped(json, false);\n}\n\nexport function EntCoolroomTypeEdgesFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'coolrooms': !exists(json, 'coolrooms') ? undefined : ((json['coolrooms'] ).map(EntCoolroomFromJSON)),\n    };\n}\n\nexport function EntCoolroomTypeEdgesToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'coolrooms': value.coolrooms === undefined ? undefined : ((value.coolrooms ).map(EntCoolroomToJSON)),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * SUT SA Example API\n * This is a sample server for SUT SE 2563\n *\n * The version of the OpenAPI document: 1.0\n * Contact: support@swagger.io\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, } from '../runtime';\nimport {\n\n    EntDeceasedReceiveEdgesFromJSON,\n\n    EntDeceasedReceiveEdgesToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EntDeceasedReceive\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport function EntDeceasedReceiveFromJSON(json) {\n    return EntDeceasedReceiveFromJSONTyped(json, false);\n}\n\nexport function EntDeceasedReceiveFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'dEATHTIME': !exists(json, 'DEATH_TIME') ? undefined : json['DEATH_TIME'],\n        'dECEASEDID': !exists(json, 'DECEASED_ID') ? undefined : json['DECEASED_ID'],\n        'dECEASEDNAME': !exists(json, 'DECEASED_NAME') ? undefined : json['DECEASED_NAME'],\n        'edges': !exists(json, 'edges') ? undefined : EntDeceasedReceiveEdgesFromJSON(json['edges']),\n        'id': !exists(json, 'id') ? undefined : json['id'],\n    };\n}\n\nexport function EntDeceasedReceiveToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'DEATH_TIME': value.dEATHTIME,\n        'DECEASED_ID': value.dECEASEDID,\n        'DECEASED_NAME': value.dECEASEDNAME,\n        'edges': EntDeceasedReceiveEdgesToJSON(value.edges),\n        'id': value.id,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * SUT SA Example API\n * This is a sample server for SUT SE 2563\n *\n * The version of the OpenAPI document: 1.0\n * Contact: support@swagger.io\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, } from '../runtime';\nimport {\n\n    EntCoolroomFromJSON,\n\n    EntCoolroomToJSON,\n\n    EntRelativeFromJSON,\n\n    EntRelativeToJSON,\n\n    EntUserFromJSON,\n\n    EntUserToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EntDeceasedReceiveEdges\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport function EntDeceasedReceiveEdgesFromJSON(json) {\n    return EntDeceasedReceiveEdgesFromJSONTyped(json, false);\n}\n\nexport function EntDeceasedReceiveEdgesFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'coolroomid': !exists(json, 'coolroomid') ? undefined : EntCoolroomFromJSON(json['coolroomid']),\n        'doctorid': !exists(json, 'doctorid') ? undefined : EntUserFromJSON(json['doctorid']),\n        'relativeid': !exists(json, 'relativeid') ? undefined : EntRelativeFromJSON(json['relativeid']),\n    };\n}\n\nexport function EntDeceasedReceiveEdgesToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'coolroomid': EntCoolroomToJSON(value.coolroomid),\n        'doctorid': EntUserToJSON(value.doctorid),\n        'relativeid': EntRelativeToJSON(value.relativeid),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * SUT SA Example API\n * This is a sample server for SUT SE 2563\n *\n * The version of the OpenAPI document: 1.0\n * Contact: support@swagger.io\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, } from '../runtime';\nimport {\n\n    EntRelativeEdgesFromJSON,\n\n    EntRelativeEdgesToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EntRelative\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport function EntRelativeFromJSON(json) {\n    return EntRelativeFromJSONTyped(json, false);\n}\n\nexport function EntRelativeFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'rELATIVEID': !exists(json, 'RELATIVE_ID') ? undefined : json['RELATIVE_ID'],\n        'rELATIVENAME': !exists(json, 'RELATIVE_NAME') ? undefined : json['RELATIVE_NAME'],\n        'edges': !exists(json, 'edges') ? undefined : EntRelativeEdgesFromJSON(json['edges']),\n        'id': !exists(json, 'id') ? undefined : json['id'],\n    };\n}\n\nexport function EntRelativeToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'RELATIVE_ID': value.rELATIVEID,\n        'RELATIVE_NAME': value.rELATIVENAME,\n        'edges': EntRelativeEdgesToJSON(value.edges),\n        'id': value.id,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * SUT SA Example API\n * This is a sample server for SUT SE 2563\n *\n * The version of the OpenAPI document: 1.0\n * Contact: support@swagger.io\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, } from '../runtime';\nimport {\n\n    EntDeceasedReceiveFromJSON,\n\n    EntDeceasedReceiveToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EntRelativeEdges\n */\n\n\n\n\n\n\n\n\n\nexport function EntRelativeEdgesFromJSON(json) {\n    return EntRelativeEdgesFromJSONTyped(json, false);\n}\n\nexport function EntRelativeEdgesFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'deceasedReceives': !exists(json, 'deceasedReceives') ? undefined : ((json['deceasedReceives'] ).map(EntDeceasedReceiveFromJSON)),\n    };\n}\n\nexport function EntRelativeEdgesToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'deceasedReceives': value.deceasedReceives === undefined ? undefined : ((value.deceasedReceives ).map(EntDeceasedReceiveToJSON)),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * SUT SA Example API\n * This is a sample server for SUT SE 2563\n *\n * The version of the OpenAPI document: 1.0\n * Contact: support@swagger.io\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, } from '../runtime';\nimport {\n\n    EntUserEdgesFromJSON,\n\n    EntUserEdgesToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EntUser\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport function EntUserFromJSON(json) {\n    return EntUserFromJSONTyped(json, false);\n}\n\nexport function EntUserFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'dOCTOREMAIL': !exists(json, 'DOCTOR_EMAIL') ? undefined : json['DOCTOR_EMAIL'],\n        'dOCTORID': !exists(json, 'DOCTOR_ID') ? undefined : json['DOCTOR_ID'],\n        'dOCTORNAME': !exists(json, 'DOCTOR_NAME') ? undefined : json['DOCTOR_NAME'],\n        'edges': !exists(json, 'edges') ? undefined : EntUserEdgesFromJSON(json['edges']),\n        'id': !exists(json, 'id') ? undefined : json['id'],\n    };\n}\n\nexport function EntUserToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'DOCTOR_EMAIL': value.dOCTOREMAIL,\n        'DOCTOR_ID': value.dOCTORID,\n        'DOCTOR_NAME': value.dOCTORNAME,\n        'edges': EntUserEdgesToJSON(value.edges),\n        'id': value.id,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * SUT SA Example API\n * This is a sample server for SUT SE 2563\n *\n * The version of the OpenAPI document: 1.0\n * Contact: support@swagger.io\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, } from '../runtime';\nimport {\n\n    EntDeceasedReceiveFromJSON,\n\n    EntDeceasedReceiveToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EntUserEdges\n */\n\n\n\n\n\n\n\n\n\nexport function EntUserEdgesFromJSON(json) {\n    return EntUserEdgesFromJSONTyped(json, false);\n}\n\nexport function EntUserEdgesFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'deceasedReceives': !exists(json, 'deceasedReceives') ? undefined : ((json['deceasedReceives'] ).map(EntDeceasedReceiveFromJSON)),\n    };\n}\n\nexport function EntUserEdgesToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'deceasedReceives': value.deceasedReceives === undefined ? undefined : ((value.deceasedReceives ).map(EntDeceasedReceiveToJSON)),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * SUT SA Example API\n * This is a sample server for SUT SE 2563\n *\n * The version of the OpenAPI document: 1.0\n * Contact: support@swagger.io\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n\n    EntCoolroomFromJSON,\n    EntCoolroomToJSON,\n\n    EntCoolroomTypeFromJSON,\n    EntCoolroomTypeToJSON,\n\n    EntDeceasedReceiveFromJSON,\n    EntDeceasedReceiveToJSON,\n\n    EntRelativeFromJSON,\n    EntRelativeToJSON,\n\n    EntUserFromJSON,\n    EntUserToJSON,\n} from '../models';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * \n */\nexport class DefaultApi extends runtime.BaseAPI {\n\n    /**\n     * Create coolroom\n     * Create coolroom\n     */\n    async createCoolroomRaw(requestParameters) {\n        if (requestParameters.coolroom === null || requestParameters.coolroom === undefined) {\n            throw new runtime.RequiredError('coolroom','Required parameter requestParameters.coolroom was null or undefined when calling createCoolroom.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/coolrooms`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: EntCoolroomToJSON(requestParameters.coolroom),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntCoolroomFromJSON(jsonValue));\n    }\n\n    /**\n     * Create coolroom\n     * Create coolroom\n     */\n    async createCoolroom(requestParameters) {\n        const response = await this.createCoolroomRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Create coolroomtype\n     * Create coolroomtype\n     */\n    async createCoolroomtypeRaw(requestParameters) {\n        if (requestParameters.coolroomtype === null || requestParameters.coolroomtype === undefined) {\n            throw new runtime.RequiredError('coolroomtype','Required parameter requestParameters.coolroomtype was null or undefined when calling createCoolroomtype.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/coolroomtypes`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: EntCoolroomTypeToJSON(requestParameters.coolroomtype),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntCoolroomTypeFromJSON(jsonValue));\n    }\n\n    /**\n     * Create coolroomtype\n     * Create coolroomtype\n     */\n    async createCoolroomtype(requestParameters) {\n        const response = await this.createCoolroomtypeRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Create deceasedreceive\n     * Create deceasedreceive\n     */\n    async createDeceasedreceiveRaw(requestParameters) {\n        if (requestParameters.deceasedreceive === null || requestParameters.deceasedreceive === undefined) {\n            throw new runtime.RequiredError('deceasedreceive','Required parameter requestParameters.deceasedreceive was null or undefined when calling createDeceasedreceive.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/deceasedreceives`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: EntDeceasedReceiveToJSON(requestParameters.deceasedreceive),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntDeceasedReceiveFromJSON(jsonValue));\n    }\n\n    /**\n     * Create deceasedreceive\n     * Create deceasedreceive\n     */\n    async createDeceasedreceive(requestParameters) {\n        const response = await this.createDeceasedreceiveRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Create relative\n     * Create relative\n     */\n    async createRelativeRaw(requestParameters) {\n        if (requestParameters.relative === null || requestParameters.relative === undefined) {\n            throw new runtime.RequiredError('relative','Required parameter requestParameters.relative was null or undefined when calling createRelative.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/relatives`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: EntRelativeToJSON(requestParameters.relative),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntRelativeFromJSON(jsonValue));\n    }\n\n    /**\n     * Create relative\n     * Create relative\n     */\n    async createRelative(requestParameters) {\n        const response = await this.createRelativeRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Create user\n     * Create user\n     */\n    async createUserRaw(requestParameters) {\n        if (requestParameters.user === null || requestParameters.user === undefined) {\n            throw new runtime.RequiredError('user','Required parameter requestParameters.user was null or undefined when calling createUser.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/users`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: EntUserToJSON(requestParameters.user),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntUserFromJSON(jsonValue));\n    }\n\n    /**\n     * Create user\n     * Create user\n     */\n    async createUser(requestParameters) {\n        const response = await this.createUserRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * get coolroom by ID\n     * Delete a coolroom entity by ID\n     */\n    async deleteCoolroomRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteCoolroom.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        const response = await this.request({\n            path: `/coolrooms/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response);\n    }\n\n    /**\n     * get coolroom by ID\n     * Delete a coolroom entity by ID\n     */\n    async deleteCoolroom(requestParameters) {\n        const response = await this.deleteCoolroomRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * get coolroomtype by ID\n     * Delete a coolroomtype entity by ID\n     */\n    async deleteCoolroomtypeRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteCoolroomtype.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        const response = await this.request({\n            path: `/coolroomtypes/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response);\n    }\n\n    /**\n     * get coolroomtype by ID\n     * Delete a coolroomtype entity by ID\n     */\n    async deleteCoolroomtype(requestParameters) {\n        const response = await this.deleteCoolroomtypeRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * get deceasedreceive by ID\n     * Delete a deceasedreceive entity by ID\n     */\n    async deleteDeceasedreceiveRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteDeceasedreceive.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        const response = await this.request({\n            path: `/deceasedreceives/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response);\n    }\n\n    /**\n     * get deceasedreceive by ID\n     * Delete a deceasedreceive entity by ID\n     */\n    async deleteDeceasedreceive(requestParameters) {\n        const response = await this.deleteDeceasedreceiveRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * get relative by ID\n     * Delete a relative entity by ID\n     */\n    async deleteRelativeRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteRelative.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        const response = await this.request({\n            path: `/relatives/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response);\n    }\n\n    /**\n     * get relative by ID\n     * Delete a relative entity by ID\n     */\n    async deleteRelative(requestParameters) {\n        const response = await this.deleteRelativeRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * get user by ID\n     * Delete a user entity by ID\n     */\n    async deleteUserRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteUser.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        const response = await this.request({\n            path: `/users/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response);\n    }\n\n    /**\n     * get user by ID\n     * Delete a user entity by ID\n     */\n    async deleteUser(requestParameters) {\n        const response = await this.deleteUserRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * get coolroom by ID\n     * Get a coolroom entity by ID\n     */\n    async getCoolroomRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getCoolroom.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        const response = await this.request({\n            path: `/coolrooms/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntCoolroomFromJSON(jsonValue));\n    }\n\n    /**\n     * get coolroom by ID\n     * Get a coolroom entity by ID\n     */\n    async getCoolroom(requestParameters) {\n        const response = await this.getCoolroomRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * get coolroomtype by ID\n     * Get a coolroomtype entity by ID\n     */\n    async getCoolroomtypeRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getCoolroomtype.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        const response = await this.request({\n            path: `/coolroomtypes/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntCoolroomTypeFromJSON(jsonValue));\n    }\n\n    /**\n     * get coolroomtype by ID\n     * Get a coolroomtype entity by ID\n     */\n    async getCoolroomtype(requestParameters) {\n        const response = await this.getCoolroomtypeRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * get deceasedreceive by ID\n     * Get a deceasedreceive entity by ID\n     */\n    async getDeceasedreceiveRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getDeceasedreceive.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        const response = await this.request({\n            path: `/deceasedreceives/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntDeceasedReceiveFromJSON(jsonValue));\n    }\n\n    /**\n     * get deceasedreceive by ID\n     * Get a deceasedreceive entity by ID\n     */\n    async getDeceasedreceive(requestParameters) {\n        const response = await this.getDeceasedreceiveRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * get relative by ID\n     * Get a relative entity by ID\n     */\n    async getRelativeRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getRelative.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        const response = await this.request({\n            path: `/relatives/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntRelativeFromJSON(jsonValue));\n    }\n\n    /**\n     * get relative by ID\n     * Get a relative entity by ID\n     */\n    async getRelative(requestParameters) {\n        const response = await this.getRelativeRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * get user by ID\n     * Get a user entity by ID\n     */\n    async getUserRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getUser.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        const response = await this.request({\n            path: `/users/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntUserFromJSON(jsonValue));\n    }\n\n    /**\n     * get user by ID\n     * Get a user entity by ID\n     */\n    async getUser(requestParameters) {\n        const response = await this.getUserRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * list coolroom entities\n     * List coolroom entities\n     */\n    async listCoolroomRaw(requestParameters) {\n        const queryParameters = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        const headerParameters = {};\n\n        const response = await this.request({\n            path: `/coolrooms`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(EntCoolroomFromJSON));\n    }\n\n    /**\n     * list coolroom entities\n     * List coolroom entities\n     */\n    async listCoolroom(requestParameters) {\n        const response = await this.listCoolroomRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * list coolroomtype entities\n     * List coolroomtype entities\n     */\n    async listCoolroomtypeRaw(requestParameters) {\n        const queryParameters = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        const headerParameters = {};\n\n        const response = await this.request({\n            path: `/coolroomtypes`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(EntCoolroomTypeFromJSON));\n    }\n\n    /**\n     * list coolroomtype entities\n     * List coolroomtype entities\n     */\n    async listCoolroomtype(requestParameters) {\n        const response = await this.listCoolroomtypeRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * list deceasedreceive entities\n     * List deceasedreceive entities\n     */\n    async listDeceasedreceiveRaw(requestParameters) {\n        const queryParameters = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        const headerParameters = {};\n\n        const response = await this.request({\n            path: `/deceasedreceives`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(EntDeceasedReceiveFromJSON));\n    }\n\n    /**\n     * list deceasedreceive entities\n     * List deceasedreceive entities\n     */\n    async listDeceasedreceive(requestParameters) {\n        const response = await this.listDeceasedreceiveRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * list relative entities\n     * List relative entities\n     */\n    async listRelativeRaw(requestParameters) {\n        const queryParameters = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        const headerParameters = {};\n\n        const response = await this.request({\n            path: `/relatives`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(EntRelativeFromJSON));\n    }\n\n    /**\n     * list relative entities\n     * List relative entities\n     */\n    async listRelative(requestParameters) {\n        const response = await this.listRelativeRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * list user entities\n     * List user entities\n     */\n    async listUserRaw(requestParameters) {\n        const queryParameters = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        const headerParameters = {};\n\n        const response = await this.request({\n            path: `/users`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(EntUserFromJSON));\n    }\n\n    /**\n     * list user entities\n     * List user entities\n     */\n    async listUser(requestParameters) {\n        const response = await this.listUserRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * update coolroom by ID\n     * Update a coolroom entity by ID\n     */\n    async updateCoolroomRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling updateCoolroom.');\n        }\n\n        if (requestParameters.coolroom === null || requestParameters.coolroom === undefined) {\n            throw new runtime.RequiredError('coolroom','Required parameter requestParameters.coolroom was null or undefined when calling updateCoolroom.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/coolrooms/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: EntCoolroomToJSON(requestParameters.coolroom),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntCoolroomFromJSON(jsonValue));\n    }\n\n    /**\n     * update coolroom by ID\n     * Update a coolroom entity by ID\n     */\n    async updateCoolroom(requestParameters) {\n        const response = await this.updateCoolroomRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * update coolroomtype by ID\n     * Update a coolroomtype entity by ID\n     */\n    async updateCoolroomtypeRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling updateCoolroomtype.');\n        }\n\n        if (requestParameters.coolroomtype === null || requestParameters.coolroomtype === undefined) {\n            throw new runtime.RequiredError('coolroomtype','Required parameter requestParameters.coolroomtype was null or undefined when calling updateCoolroomtype.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/coolroomtypes/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: EntCoolroomTypeToJSON(requestParameters.coolroomtype),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntCoolroomTypeFromJSON(jsonValue));\n    }\n\n    /**\n     * update coolroomtype by ID\n     * Update a coolroomtype entity by ID\n     */\n    async updateCoolroomtype(requestParameters) {\n        const response = await this.updateCoolroomtypeRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * update deceasedreceive by ID\n     * Update a deceasedreceive entity by ID\n     */\n    async updateDeceasedreceiveRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling updateDeceasedreceive.');\n        }\n\n        if (requestParameters.deceasedreceive === null || requestParameters.deceasedreceive === undefined) {\n            throw new runtime.RequiredError('deceasedreceive','Required parameter requestParameters.deceasedreceive was null or undefined when calling updateDeceasedreceive.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/deceasedreceives/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: EntDeceasedReceiveToJSON(requestParameters.deceasedreceive),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntDeceasedReceiveFromJSON(jsonValue));\n    }\n\n    /**\n     * update deceasedreceive by ID\n     * Update a deceasedreceive entity by ID\n     */\n    async updateDeceasedreceive(requestParameters) {\n        const response = await this.updateDeceasedreceiveRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * update relative by ID\n     * Update a relative entity by ID\n     */\n    async updateRelativeRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling updateRelative.');\n        }\n\n        if (requestParameters.relative === null || requestParameters.relative === undefined) {\n            throw new runtime.RequiredError('relative','Required parameter requestParameters.relative was null or undefined when calling updateRelative.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/relatives/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: EntRelativeToJSON(requestParameters.relative),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntRelativeFromJSON(jsonValue));\n    }\n\n    /**\n     * update relative by ID\n     * Update a relative entity by ID\n     */\n    async updateRelative(requestParameters) {\n        const response = await this.updateRelativeRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * update user by ID\n     * Update a user entity by ID\n     */\n    async updateUserRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling updateUser.');\n        }\n\n        if (requestParameters.user === null || requestParameters.user === undefined) {\n            throw new runtime.RequiredError('user','Required parameter requestParameters.user was null or undefined when calling updateUser.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/users/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: EntUserToJSON(requestParameters.user),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntUserFromJSON(jsonValue));\n    }\n\n    /**\n     * update user by ID\n     * Update a user entity by ID\n     */\n    async updateUser(requestParameters) {\n        const response = await this.updateUserRaw(requestParameters);\n        return await response.value();\n    }\n\n}\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DefaultApi } from '../../api/apis';\r\n \r\nconst useStyles = makeStyles({\r\n table: {\r\n   minWidth: 650,\r\n },\r\n});\r\n \r\nexport default function ComponentsTable() {\r\n const classes = useStyles();\r\n const api = new DefaultApi();\r\n const [deceasedreceives, setDeceasedreceives] = useState(Array);\r\n const [loading, setLoading] = useState(true);\r\n \r\n useEffect(() => {\r\n   const getDeceasedreceives = async () => {\r\n     const res = await api.listDeceasedreceive({ limit: 10, offset: 0 });\r\n     setLoading(false);\r\n     setDeceasedreceives(res);\r\n   };\r\n   getDeceasedreceives();\r\n }, [loading]);\r\n \r\n const deleteDeceasedreceives = async (id) => {\r\n   const res = await api.deleteDeceasedreceive({ id: id });\r\n   setLoading(true);\r\n };\r\n \r\n return (\r\n   React.createElement(TableContainer, { component: Paper,}\n     , React.createElement(Table, { className: classes.table, 'aria-label': \"simple table\" ,}\n       , React.createElement(TableHead, null\n         , React.createElement(TableRow, null\n           , React.createElement(TableCell, { align: \"center\",}, \"เลขที่\")\n           , React.createElement(TableCell, { align: \"center\",}, \"ชื่อ-สกุล\")\n           , React.createElement(TableCell, { align: \"center\",}, \"ชื่อ-สกุล ของญาติ\" )\n           , React.createElement(TableCell, { align: \"center\",}, \"หมายเลขห้องเก็บศพ\")\n           , React.createElement(TableCell, { align: \"center\",}, \"วัน/เดือน/ปี ที่เสียชีวิต\" )\n           , React.createElement(TableCell, { align: \"center\",}, \"ประเภทของศพผู้เสียชีวิต\")\n           , React.createElement(TableCell, { align: \"center\",}, \"จัดการข้อมูล\")\n         )\n       )\n       , React.createElement(TableBody, null\n         , deceasedreceives.map((item) => (\r\n           React.createElement(TableRow, { key: item.id,}\n             , React.createElement(TableCell, { align: \"center\",}, item.id)\n             , React.createElement(TableCell, { align: \"center\",}, item.dECEASEDNAME)\n             , React.createElement(TableCell, { align: \"center\",})\n             , React.createElement(TableCell, { align: \"center\",})\n             , React.createElement(TableCell, { align: \"center\",}, item.dEATHTIME)\n             , React.createElement(TableCell, { align: \"center\",})\n             , React.createElement(TableCell, { align: \"center\",}\n               , React.createElement(Button, {\r\n                 onClick: () => {\r\n                   deleteDeceasedreceives(item.id);\r\n                 },\r\n                 style: { marginLeft: 10 },\r\n                 variant: \"contained\",\r\n                 color: \"secondary\",}\r\n               , \"ลบข้อมูล\"\n\n               )\n             )\n           )\r\n         ))\n       )\n     )\n   )\r\n );\r\n}","import React, { } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport ComponanceTable from '../Table';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n \nimport {\n Content,\n Header,\n Page,\n pageTheme,\n ContentHeader,\n Link,\n} from '@backstage/core';\n \nconst WelcomePage = () => {\nconst profile = { givenName: 'ยินดีต้อนรับสู่ ระบบผู้เสียชีวิต' };\nconst username = { givenuser: 'นายแพทย์กำลัง นอนพอดี' };\n \n return (\n   React.createElement(Page, { theme: pageTheme.home,}\n     , React.createElement(Header, {\n       title: `${profile.givenName}`,\n       subtitle: \"\",}\n     )\n     , React.createElement(Content, null\n       , React.createElement(ContentHeader, { title: \"ตารางข้อมูลผู้เสียชีวิต\",}\n         , React.createElement(Typography, { align: \"left\", style: { marginRight: 16,color: \"#00eeff\" },}\n         , username.givenuser\n         )\n         , React.createElement('div', null\n         , React.createElement(Button, { variant: \"contained\", color: \"primary\",}, \"ออกจากระบบ\"\n\n         )\n         )\n       )\n       , React.createElement(ContentHeader, { title: \"\",}\n         , React.createElement('div', null\n          , React.createElement(Link, { component: RouterLink, to: \"/user\",}\n            , React.createElement(Button, { variant: \"contained\", color: \"primary\", style: {backgroundColor: \"#21b6ae\"},}, \"เพิ่มข้อมูลผู้เสียชีวิต\"\n\n            )\n          )\n         )\n       )\n       , React.createElement('div', null\n       )\n       , React.createElement(ComponanceTable, null)\n     )\n   )\n );\n};\n \nexport default WelcomePage;","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n  Content,\r\n  Header,\r\n  Page,\r\n  pageTheme,\r\n  ContentHeader,\r\n} from '@backstage/core';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { DefaultApi } from '../../api/apis';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'center',\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(3),\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n      width: '25ch',\r\n    },\r\n  }),\r\n);\r\n\r\nconst initialUserState = {\r\n  dOCTORID: 'D0001',\r\n  dOCTORNAME: 'นายแพทย์กำลัง นอนพอดี',\r\n  dOCTOREMAIL: 'Gumlung@gmail.com',\r\n};\r\n\r\nconst username = { givenuser: 'นายแพทย์กำลัง นอนพอดี' };\r\n\r\nexport default function Create() {\r\n  const classes = useStyles();\r\n  const profile = { givenName: 'ยินดีต้อนรับสู่ ระบบผู้เสียชีวิต' };\r\n  const api = new DefaultApi();\r\n\r\n  const [deceased, setDeceased] = useState(String);\r\n  const [status, setStatus] = useState(false);\r\n  const [alert, setAlert] = useState(true);\r\n  const [coolrooms, setCoolrooms] = useState(Array);\r\n  const [coolroomtypes, setCoolroomTypes] = useState(Array);\r\n  const [relatives, setRelatives] = useState(Array);\r\n  const [loading, setLoading] = useState(true);\r\n  const [deathtime, setDeathtime] = useState(String);\r\n\r\n  const [coolroomid, setcoolroom] = React.useState(Number);\r\n  const [typeid, setDeadStatus] = React.useState(Number);\r\n  const [relativeid, setRelative] = React.useState(Number);\r\n\r\n  useEffect(() => {\r\n    const getCoolroomTypes = async () => {\r\n      const res = await api.listCoolroomtype({ limit: 10, offset: 0 });\r\n      setLoading(false);\r\n      setCoolroomTypes(res);\r\n    };\r\n    getCoolroomTypes();\r\n\r\n    const getCoolrooms = async () => {\r\n      const res = await api.listCoolroom({ limit: 10, offset: 0 });\r\n      setLoading(false);\r\n      setCoolrooms(res);\r\n    };\r\n    getCoolrooms();\r\n\r\n    const getRelatives = async () => {\r\n      const res = await api.listRelative({ limit: 10, offset: 0 });\r\n      setLoading(false);\r\n      setRelatives(res);\r\n    };\r\n    getRelatives();\r\n\r\n  }, [loading]);\r\n\r\n  const handleInputChange = (event) => {\r\n    //const { id, value } = event.target;\r\n    //setDeceased({ ...user, [id]: value });\r\n    setDeceased(event.target.value );\r\n  };\r\n\r\n  const handleDeathtimeChange = (event) => {\r\n    setDeathtime(event.target.value );\r\n  };\r\n\r\n  const CoolroomhandleChange = (event) => {\r\n    setcoolroom(event.target.value );\r\n  };\r\n\r\n  const DeathtypehandleChange = (event) => {\r\n    setDeadStatus(event.target.value );\r\n  };\r\n\r\n  const RelativehandleChange = (event) => {\r\n    setRelative(event.target.value );\r\n  };\r\n\r\n  const CreateDeceasedReceive = async () => {\r\n    const deceasedreceive = {\r\n      dECEASEDID: 1 ,\r\n      dECEASEDNAME: \"deceased\",\r\n      edges: {coolroomid: {id: 1}, doctorid: {id: 1}, relativeid: {id: 1}},\r\n      dEATHTIME: \"deathtime\"\r\n    };\r\n    const res = await api.createDeceasedreceive({ deceasedreceive: deceasedreceive });\r\n    setStatus(true);\r\n    if (res.id != '') {\r\n      setAlert(true);\r\n    } else {\r\n      setAlert(false);\r\n    }\r\n    const timer = setTimeout(() => {\r\n      setStatus(false);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    React.createElement(Page, { theme: pageTheme.home,}\n      , React.createElement(Header, {\r\n        title: `${profile.givenName}`,}\r\n      //subtitle=\"Some quick intro and links.\"\r\n      )\n      , React.createElement(Content, null\n        , React.createElement(ContentHeader, { title: \"เพิ่มข้อมูลผู้เสียชีวิต\",}\n          , React.createElement(Typography, { align: \"left\", style: { marginRight: 16, color: \"#00eeff\" },}\n            , username.givenuser\n          )\n          , React.createElement('div', null\n            , React.createElement(Button, { variant: \"contained\", color: \"primary\",}, \"ออกจากระบบ\"\n\n         )\n          )\n          , status ? (\r\n            React.createElement('div', null\n              , alert ? (\r\n                React.createElement(Alert, { severity: \"success\",}, \"This is a success alert — check it out!\"\n\n                )\r\n              ) : (\r\n                  React.createElement(Alert, { severity: \"warning\", style: { marginTop: 20 },}, \"This is a warning alert — check it out!\"\n\n                  )\r\n                )\n            )\r\n          ) : null\n        )\n        , React.createElement('div', { className: classes.root,}\n          , React.createElement('form', { noValidate: true, autoComplete: \"off\",}\n            , React.createElement(FormControl, {\r\n              //fullWidth\r\n              className: classes.margin,\r\n              variant: \"outlined\",}\r\n            \n              , React.createElement(TextField, {\r\n                id: \"name\",\r\n                label: \"ชื่อ-นามสกุลผู้เสียชีวิต\",\r\n                variant: \"outlined\",\r\n                type: \"string\",\r\n                size: \"medium\",\r\n                value: deceased,\r\n                onChange: handleInputChange,\r\n                style: { width: 400 },}\r\n              )\n            )\n\n            , React.createElement('div', null\n              , React.createElement(FormControl, {\r\n                className: classes.margin,\r\n                variant: \"outlined\",}\r\n              \n                , React.createElement(InputLabel, { id: \"relative-label\",}, \"ชื่อ-สกุล ญาติผู้เสียชีวิต\" )\n                , React.createElement(Select, {\r\n                  labelId: \"relative-label\",\r\n                  id: \"relative\",\r\n                  value: relativeid,\r\n                  onChange: RelativehandleChange,\r\n                  style: { width: 400 },}\r\n                \n                , relatives.map((item) => (\r\n                  React.createElement(MenuItem, { value: item.id,}, item.rELATIVENAME)\r\n                ))\n                )\n              )\n            )\n\n            , React.createElement(FormControl, {\r\n              className: classes.margin,\r\n              variant: \"outlined\",}\r\n            \n              , React.createElement(InputLabel, { id: \"status-death\",}, \"ประเภทศพผู้เสียชีวิต\")\n              , React.createElement(Select, {\r\n                labelId: \"status-death\",\r\n                id: \"statusdeath\",\r\n                value: typeid,\r\n                onChange: DeathtypehandleChange,\r\n                style: { width: 200 },}\r\n              \n                , coolroomtypes.map((item) => (\r\n                  React.createElement(MenuItem, { value: item.id,}, item.cOOLROOMTYPENAME)\r\n                ))\n              )\n            )\n\n            , React.createElement('div', null\n              , React.createElement(FormControl, {\r\n                className: classes.margin,\r\n                variant: \"outlined\",}\r\n              \n                , React.createElement(InputLabel, { id: \"coolroom-label\",}, \"หมายเลขห้องเย็น\")\n                , React.createElement(Select, {\r\n                  labelId: \"coolroom-label\",\r\n                  id: \"coolroom\",\r\n                  value: coolroomid,\r\n                  onChange: CoolroomhandleChange,\r\n                  style: { width: 200 },}\r\n                \n                , coolrooms.filter((setfilterid ) => setfilterid.id === typeid).map((item) => (\r\n                  React.createElement(MenuItem, { value: item.id,}, item.cOOLROOMNAME)                 \r\n                ))\n                )\n              )\n\n              , React.createElement(FormControl, {\r\n                className: classes.margin,\r\n                variant: \"outlined\",}\r\n              \n                , React.createElement(TextField, {\r\n                  id: \"deathtime\",\r\n                  label: \"ว/ด/ป เวลาเสียชีวิต\" ,\r\n                  type: \"datetime-local\",\r\n                  value: deathtime,\r\n                  onChange: handleDeathtimeChange,\r\n                  className: classes.textField,\r\n                  InputLabelProps: {\r\n                    shrink: true,\r\n                  },}\r\n                )\n              )\n            )\n\n            , React.createElement('div', { className: classes.margin,}\n              , React.createElement(Button, {\r\n                onClick: () => {\r\n                  CreateDeceasedReceive();\r\n                },\r\n                variant: \"contained\",\r\n                color: \"primary\",}\r\n              , \"ยืนยัน\"\n\n             )\n              , React.createElement(Button, {\r\n                style: { marginLeft: 20 },\r\n                component: RouterLink,\r\n                to: \"/\",\r\n                variant: \"contained\",}\r\n              , \"กลับ\"\n\n             )\n            )\n          )\n        )\n      )\n    )\r\n  );\r\n}\r\n","import { createPlugin } from '@backstage/core';\nimport WelcomePage from './components/WelcomePage';\nimport CreateUser from './components/Users';\n\nexport const plugin = createPlugin({\n  id: 'welcome',\n  register({ router }) {\n    router.registerRoute('/', WelcomePage);\n    router.registerRoute('/user', CreateUser);\n  },\n});\n","import { createApp } from '@backstage/core';\nimport React, { } from 'react';\nimport * as plugins from './plugins';\n\nconst app = createApp({\n  plugins: Object.values(plugins),\n});\n\nconst AppProvider = app.getProvider();\nconst AppRouter = app.getRouter();\nconst AppRoutes = app.getRoutes();\n\nconst App = () => (\n  React.createElement(AppProvider, null\n    , React.createElement(AppRouter, null\n      , React.createElement(AppRoutes, null )\n    )\n  )\n);\n\nexport default App;\n","import '@backstage/cli/asset-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(React.createElement(App, null ), document.getElementById('root'));\n"],"sourceRoot":""}