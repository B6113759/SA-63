(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{466:function(e,t,a){a(467),e.exports=a(918)},918:function(e,t,a){"use strict";a.r(t);var r={};a.r(r),a.d(r,"WelcomePlugin",(function(){return le}));a(470);var i=a(0),n=a.n(i),o=a(17),l=a.n(o),s=a(40),d=a(77),c=a(394),u=a(402),m=a(387),w=a(381),h=a(968),p=a(400),v=a(388),f=a(101),E=a(395);const y="http://localhost:8080/api/v1".replace(/\/+$/,"");class R{constructor(e=new O){this.configuration=e,R.prototype.__init.call(this),this.middleware=e.middleware}withMiddleware(...e){const t=this.clone();return t.middleware=t.middleware.concat(...e),t}withPreMiddleware(...e){const t=e.map(e=>({pre:e}));return this.withMiddleware(...t)}withPostMiddleware(...e){const t=e.map(e=>({post:e}));return this.withMiddleware(...t)}async request(e){const{url:t,init:a}=this.createFetchParams(e),r=await this.fetchApi(t,a);if(r.status>=200&&r.status<300)return r;throw r}createFetchParams(e){let t=this.configuration.basePath+e.path;void 0!==e.query&&0!==Object.keys(e.query).length&&(t+="?"+this.configuration.queryParamsStringify(e.query));const a="undefined"!=typeof FormData&&e.body instanceof FormData||e.body instanceof URLSearchParams||(r=e.body,"undefined"!=typeof Blob&&r instanceof Blob)?e.body:JSON.stringify(e.body);var r;const i=Object.assign({},this.configuration.headers,e.headers);return{url:t,init:{method:e.method,headers:i,body:a,credentials:this.configuration.credentials}}}__init(){this.fetchApi=async(e,t)=>{let a={url:e,init:t};for(const e of this.middleware)e.pre&&(a=await e.pre({fetch:this.fetchApi,...a})||a);let r=await this.configuration.fetchApi(a.url,a.init);for(const a of this.middleware)a.post&&(r=await a.post({fetch:this.fetchApi,url:e,init:t,response:r.clone()})||r);return r}}clone(){const e=new(0,this.constructor)(this.configuration);return e.middleware=this.middleware.slice(),e}}class g extends Error{__init2(){this.name="RequiredError"}constructor(e,t){super(t),this.field=e,g.prototype.__init2.call(this)}}class O{constructor(e={}){this.configuration=e}get basePath(){return null!=this.configuration.basePath?this.configuration.basePath:y}get fetchApi(){return this.configuration.fetchApi||window.fetch.bind(window)}get middleware(){return this.configuration.middleware||[]}get queryParamsStringify(){return this.configuration.queryParamsStringify||q}get username(){return this.configuration.username}get password(){return this.configuration.password}get apiKey(){const e=this.configuration.apiKey;if(e)return"function"==typeof e?e:()=>e}get accessToken(){const e=this.configuration.accessToken;if(e)return"function"==typeof e?e:()=>e}get headers(){return this.configuration.headers}get credentials(){return this.configuration.credentials}}function C(e,t){const a=e[t];return null!=a}function q(e,t=""){return Object.keys(e).map(a=>{const r=t+(t.length?`[${a}]`:a),i=e[a];if(i instanceof Array){const e=i.map(e=>encodeURIComponent(String(e))).join(`&${encodeURIComponent(r)}=`);return`${encodeURIComponent(r)}=${e}`}return i instanceof Object?q(i,r):`${encodeURIComponent(r)}=${encodeURIComponent(String(i))}`}).filter(e=>e.length>0).join("&")}class T{constructor(e,t=(e=>e)){this.raw=e,this.transformer=t}async value(){return this.transformer(await this.raw.json())}}function A(e){return function(e,t){if(null==e)return e;return{cOOLROOMCAPACITY:C(e,"COOLROOM_CAPACITY")?e.COOLROOM_CAPACITY:void 0,cOOLROOMID:C(e,"COOLROOM_ID")?e.COOLROOM_ID:void 0,cOOLROOMNAME:C(e,"COOLROOM_NAME")?e.COOLROOM_NAME:void 0,edges:C(e,"edges")?I(e.edges):void 0,id:C(e,"id")?e.id:void 0}}(e)}function D(e){if(void 0!==e)return null===e?null:{COOLROOM_CAPACITY:e.cOOLROOMCAPACITY,COOLROOM_ID:e.cOOLROOMID,COOLROOM_NAME:e.cOOLROOMNAME,edges:M(e.edges),id:e.id}}function I(e){return function(e,t){if(null==e)return e;return{coolroomtypeid:C(e,"coolroomtypeid")?b(e.coolroomtypeid):void 0,deceasedReceives:C(e,"deceasedReceives")?e.deceasedReceives.map(_):void 0}}(e)}function M(e){if(void 0!==e)return null===e?null:{coolroomtypeid:P(e.coolroomtypeid),deceasedReceives:void 0===e.deceasedReceives?void 0:e.deceasedReceives.map(U)}}function b(e){return function(e,t){if(null==e)return e;return{cOOLROOMTYPEID:C(e,"COOLROOM_TYPE_ID")?e.COOLROOM_TYPE_ID:void 0,cOOLROOMTYPENAME:C(e,"COOLROOM_TYPE_NAME")?e.COOLROOM_TYPE_NAME:void 0,edges:C(e,"edges")?S(e.edges):void 0,id:C(e,"id")?e.id:void 0}}(e)}function P(e){if(void 0!==e)return null===e?null:{COOLROOM_TYPE_ID:e.cOOLROOMTYPEID,COOLROOM_TYPE_NAME:e.cOOLROOMTYPENAME,edges:L(e.edges),id:e.id}}function S(e){return function(e,t){if(null==e)return e;return{coolrooms:C(e,"coolrooms")?e.coolrooms.map(A):void 0}}(e)}function L(e){if(void 0!==e)return null===e?null:{coolrooms:void 0===e.coolrooms?void 0:e.coolrooms.map(D)}}function _(e){return function(e,t){if(null==e)return e;return{dEATHTIME:C(e,"DEATH_TIME")?e.DEATH_TIME:void 0,dECEASEDID:C(e,"DECEASED_ID")?e.DECEASED_ID:void 0,dECEASEDNAME:C(e,"DECEASED_NAME")?e.DECEASED_NAME:void 0,edges:C(e,"edges")?N(e.edges):void 0,id:C(e,"id")?e.id:void 0}}(e)}function U(e){if(void 0!==e)return null===e?null:{DEATH_TIME:e.dEATHTIME,DECEASED_ID:e.dECEASEDID,DECEASED_NAME:e.dECEASEDNAME,edges:j(e.edges),id:e.id}}function N(e){return function(e,t){if(null==e)return e;return{coolroomid:C(e,"coolroomid")?A(e.coolroomid):void 0,doctorid:C(e,"doctorid")?x(e.doctorid):void 0,relativeid:C(e,"relativeid")?Y(e.relativeid):void 0}}(e)}function j(e){if(void 0!==e)return null===e?null:{coolroomid:D(e.coolroomid),doctorid:H(e.doctorid),relativeid:k(e.relativeid)}}function Y(e){return function(e,t){if(null==e)return e;return{rELATIVEID:C(e,"RELATIVE_ID")?e.RELATIVE_ID:void 0,rELATIVENAME:C(e,"RELATIVE_NAME")?e.RELATIVE_NAME:void 0,edges:C(e,"edges")?V(e.edges):void 0,id:C(e,"id")?e.id:void 0}}(e)}function k(e){if(void 0!==e)return null===e?null:{RELATIVE_ID:e.rELATIVEID,RELATIVE_NAME:e.rELATIVENAME,edges:G(e.edges),id:e.id}}function V(e){return function(e,t){if(null==e)return e;return{deceasedReceives:C(e,"deceasedReceives")?e.deceasedReceives.map(_):void 0}}(e)}function G(e){if(void 0!==e)return null===e?null:{deceasedReceives:void 0===e.deceasedReceives?void 0:e.deceasedReceives.map(U)}}function x(e){return function(e,t){if(null==e)return e;return{dOCTOREMAIL:C(e,"DOCTOR_EMAIL")?e.DOCTOR_EMAIL:void 0,dOCTORID:C(e,"DOCTOR_ID")?e.DOCTOR_ID:void 0,dOCTORNAME:C(e,"DOCTOR_NAME")?e.DOCTOR_NAME:void 0,edges:C(e,"edges")?$(e.edges):void 0,id:C(e,"id")?e.id:void 0}}(e)}function H(e){if(void 0!==e)return null===e?null:{DOCTOR_EMAIL:e.dOCTOREMAIL,DOCTOR_ID:e.dOCTORID,DOCTOR_NAME:e.dOCTORNAME,edges:F(e.edges),id:e.id}}function $(e){return function(e,t){if(null==e)return e;return{deceasedReceives:C(e,"deceasedReceives")?e.deceasedReceives.map(_):void 0}}(e)}function F(e){if(void 0!==e)return null===e?null:{deceasedReceives:void 0===e.deceasedReceives?void 0:e.deceasedReceives.map(U)}}class B extends R{async createCoolroomRaw(e){if(null===e.coolroom||void 0===e.coolroom)throw new g("coolroom","Required parameter requestParameters.coolroom was null or undefined when calling createCoolroom.");const t={"Content-Type":"application/json"},a=await this.request({path:"/coolrooms",method:"POST",headers:t,query:{},body:D(e.coolroom)});return new T(a,e=>A(e))}async createCoolroom(e){const t=await this.createCoolroomRaw(e);return await t.value()}async createCoolroomtypeRaw(e){if(null===e.coolroomtype||void 0===e.coolroomtype)throw new g("coolroomtype","Required parameter requestParameters.coolroomtype was null or undefined when calling createCoolroomtype.");const t={"Content-Type":"application/json"},a=await this.request({path:"/coolroomtypes",method:"POST",headers:t,query:{},body:P(e.coolroomtype)});return new T(a,e=>b(e))}async createCoolroomtype(e){const t=await this.createCoolroomtypeRaw(e);return await t.value()}async createDeceasedreceiveRaw(e){if(null===e.deceasedreceive||void 0===e.deceasedreceive)throw new g("deceasedreceive","Required parameter requestParameters.deceasedreceive was null or undefined when calling createDeceasedreceive.");const t={"Content-Type":"application/json"},a=await this.request({path:"/deceasedreceives",method:"POST",headers:t,query:{},body:U(e.deceasedreceive)});return new T(a,e=>_(e))}async createDeceasedreceive(e){const t=await this.createDeceasedreceiveRaw(e);return await t.value()}async createRelativeRaw(e){if(null===e.relative||void 0===e.relative)throw new g("relative","Required parameter requestParameters.relative was null or undefined when calling createRelative.");const t={"Content-Type":"application/json"},a=await this.request({path:"/relatives",method:"POST",headers:t,query:{},body:k(e.relative)});return new T(a,e=>Y(e))}async createRelative(e){const t=await this.createRelativeRaw(e);return await t.value()}async createUserRaw(e){if(null===e.user||void 0===e.user)throw new g("user","Required parameter requestParameters.user was null or undefined when calling createUser.");const t={"Content-Type":"application/json"},a=await this.request({path:"/users",method:"POST",headers:t,query:{},body:H(e.user)});return new T(a,e=>x(e))}async createUser(e){const t=await this.createUserRaw(e);return await t.value()}async deleteCoolroomRaw(e){if(null===e.id||void 0===e.id)throw new g("id","Required parameter requestParameters.id was null or undefined when calling deleteCoolroom.");const t=await this.request({path:"/coolrooms/{id}".replace("{id}",encodeURIComponent(String(e.id))),method:"DELETE",headers:{},query:{}});return new T(t)}async deleteCoolroom(e){const t=await this.deleteCoolroomRaw(e);return await t.value()}async deleteCoolroomtypeRaw(e){if(null===e.id||void 0===e.id)throw new g("id","Required parameter requestParameters.id was null or undefined when calling deleteCoolroomtype.");const t=await this.request({path:"/coolroomtypes/{id}".replace("{id}",encodeURIComponent(String(e.id))),method:"DELETE",headers:{},query:{}});return new T(t)}async deleteCoolroomtype(e){const t=await this.deleteCoolroomtypeRaw(e);return await t.value()}async deleteDeceasedreceiveRaw(e){if(null===e.id||void 0===e.id)throw new g("id","Required parameter requestParameters.id was null or undefined when calling deleteDeceasedreceive.");const t=await this.request({path:"/deceasedreceives/{id}".replace("{id}",encodeURIComponent(String(e.id))),method:"DELETE",headers:{},query:{}});return new T(t)}async deleteDeceasedreceive(e){const t=await this.deleteDeceasedreceiveRaw(e);return await t.value()}async deleteRelativeRaw(e){if(null===e.id||void 0===e.id)throw new g("id","Required parameter requestParameters.id was null or undefined when calling deleteRelative.");const t=await this.request({path:"/relatives/{id}".replace("{id}",encodeURIComponent(String(e.id))),method:"DELETE",headers:{},query:{}});return new T(t)}async deleteRelative(e){const t=await this.deleteRelativeRaw(e);return await t.value()}async deleteUserRaw(e){if(null===e.id||void 0===e.id)throw new g("id","Required parameter requestParameters.id was null or undefined when calling deleteUser.");const t=await this.request({path:"/users/{id}".replace("{id}",encodeURIComponent(String(e.id))),method:"DELETE",headers:{},query:{}});return new T(t)}async deleteUser(e){const t=await this.deleteUserRaw(e);return await t.value()}async getCoolroomRaw(e){if(null===e.id||void 0===e.id)throw new g("id","Required parameter requestParameters.id was null or undefined when calling getCoolroom.");const t=await this.request({path:"/coolrooms/{id}".replace("{id}",encodeURIComponent(String(e.id))),method:"GET",headers:{},query:{}});return new T(t,e=>A(e))}async getCoolroom(e){const t=await this.getCoolroomRaw(e);return await t.value()}async getCoolroomtypeRaw(e){if(null===e.id||void 0===e.id)throw new g("id","Required parameter requestParameters.id was null or undefined when calling getCoolroomtype.");const t=await this.request({path:"/coolroomtypes/{id}".replace("{id}",encodeURIComponent(String(e.id))),method:"GET",headers:{},query:{}});return new T(t,e=>b(e))}async getCoolroomtype(e){const t=await this.getCoolroomtypeRaw(e);return await t.value()}async getDeceasedreceiveRaw(e){if(null===e.id||void 0===e.id)throw new g("id","Required parameter requestParameters.id was null or undefined when calling getDeceasedreceive.");const t=await this.request({path:"/deceasedreceives/{id}".replace("{id}",encodeURIComponent(String(e.id))),method:"GET",headers:{},query:{}});return new T(t,e=>_(e))}async getDeceasedreceive(e){const t=await this.getDeceasedreceiveRaw(e);return await t.value()}async getRelativeRaw(e){if(null===e.id||void 0===e.id)throw new g("id","Required parameter requestParameters.id was null or undefined when calling getRelative.");const t=await this.request({path:"/relatives/{id}".replace("{id}",encodeURIComponent(String(e.id))),method:"GET",headers:{},query:{}});return new T(t,e=>Y(e))}async getRelative(e){const t=await this.getRelativeRaw(e);return await t.value()}async getUserRaw(e){if(null===e.id||void 0===e.id)throw new g("id","Required parameter requestParameters.id was null or undefined when calling getUser.");const t=await this.request({path:"/users/{id}".replace("{id}",encodeURIComponent(String(e.id))),method:"GET",headers:{},query:{}});return new T(t,e=>x(e))}async getUser(e){const t=await this.getUserRaw(e);return await t.value()}async listCoolroomRaw(e){const t={};void 0!==e.limit&&(t.limit=e.limit),void 0!==e.offset&&(t.offset=e.offset);const a=await this.request({path:"/coolrooms",method:"GET",headers:{},query:t});return new T(a,e=>e.map(A))}async listCoolroom(e){const t=await this.listCoolroomRaw(e);return await t.value()}async listCoolroomtypeRaw(e){const t={};void 0!==e.limit&&(t.limit=e.limit),void 0!==e.offset&&(t.offset=e.offset);const a=await this.request({path:"/coolroomtypes",method:"GET",headers:{},query:t});return new T(a,e=>e.map(b))}async listCoolroomtype(e){const t=await this.listCoolroomtypeRaw(e);return await t.value()}async listDeceasedreceiveRaw(e){const t={};void 0!==e.limit&&(t.limit=e.limit),void 0!==e.offset&&(t.offset=e.offset);const a=await this.request({path:"/deceasedreceives",method:"GET",headers:{},query:t});return new T(a,e=>e.map(_))}async listDeceasedreceive(e){const t=await this.listDeceasedreceiveRaw(e);return await t.value()}async listRelativeRaw(e){const t={};void 0!==e.limit&&(t.limit=e.limit),void 0!==e.offset&&(t.offset=e.offset);const a=await this.request({path:"/relatives",method:"GET",headers:{},query:t});return new T(a,e=>e.map(Y))}async listRelative(e){const t=await this.listRelativeRaw(e);return await t.value()}async listUserRaw(e){const t={};void 0!==e.limit&&(t.limit=e.limit),void 0!==e.offset&&(t.offset=e.offset);const a=await this.request({path:"/users",method:"GET",headers:{},query:t});return new T(a,e=>e.map(x))}async listUser(e){const t=await this.listUserRaw(e);return await t.value()}async updateCoolroomRaw(e){if(null===e.id||void 0===e.id)throw new g("id","Required parameter requestParameters.id was null or undefined when calling updateCoolroom.");if(null===e.coolroom||void 0===e.coolroom)throw new g("coolroom","Required parameter requestParameters.coolroom was null or undefined when calling updateCoolroom.");const t={"Content-Type":"application/json"},a=await this.request({path:"/coolrooms/{id}".replace("{id}",encodeURIComponent(String(e.id))),method:"PUT",headers:t,query:{},body:D(e.coolroom)});return new T(a,e=>A(e))}async updateCoolroom(e){const t=await this.updateCoolroomRaw(e);return await t.value()}async updateCoolroomtypeRaw(e){if(null===e.id||void 0===e.id)throw new g("id","Required parameter requestParameters.id was null or undefined when calling updateCoolroomtype.");if(null===e.coolroomtype||void 0===e.coolroomtype)throw new g("coolroomtype","Required parameter requestParameters.coolroomtype was null or undefined when calling updateCoolroomtype.");const t={"Content-Type":"application/json"},a=await this.request({path:"/coolroomtypes/{id}".replace("{id}",encodeURIComponent(String(e.id))),method:"PUT",headers:t,query:{},body:P(e.coolroomtype)});return new T(a,e=>b(e))}async updateCoolroomtype(e){const t=await this.updateCoolroomtypeRaw(e);return await t.value()}async updateDeceasedreceiveRaw(e){if(null===e.id||void 0===e.id)throw new g("id","Required parameter requestParameters.id was null or undefined when calling updateDeceasedreceive.");if(null===e.deceasedreceive||void 0===e.deceasedreceive)throw new g("deceasedreceive","Required parameter requestParameters.deceasedreceive was null or undefined when calling updateDeceasedreceive.");const t={"Content-Type":"application/json"},a=await this.request({path:"/deceasedreceives/{id}".replace("{id}",encodeURIComponent(String(e.id))),method:"PUT",headers:t,query:{},body:U(e.deceasedreceive)});return new T(a,e=>_(e))}async updateDeceasedreceive(e){const t=await this.updateDeceasedreceiveRaw(e);return await t.value()}async updateRelativeRaw(e){if(null===e.id||void 0===e.id)throw new g("id","Required parameter requestParameters.id was null or undefined when calling updateRelative.");if(null===e.relative||void 0===e.relative)throw new g("relative","Required parameter requestParameters.relative was null or undefined when calling updateRelative.");const t={"Content-Type":"application/json"},a=await this.request({path:"/relatives/{id}".replace("{id}",encodeURIComponent(String(e.id))),method:"PUT",headers:t,query:{},body:k(e.relative)});return new T(a,e=>Y(e))}async updateRelative(e){const t=await this.updateRelativeRaw(e);return await t.value()}async updateUserRaw(e){if(null===e.id||void 0===e.id)throw new g("id","Required parameter requestParameters.id was null or undefined when calling updateUser.");if(null===e.user||void 0===e.user)throw new g("user","Required parameter requestParameters.user was null or undefined when calling updateUser.");const t={"Content-Type":"application/json"},a=await this.request({path:"/users/{id}".replace("{id}",encodeURIComponent(String(e.id))),method:"PUT",headers:t,query:{},body:H(e.user)});return new T(a,e=>x(e))}async updateUser(e){const t=await this.updateUserRaw(e);return await t.value()}}const J=Object(c.a)({table:{minWidth:650}});function W(){const e=J(),t=new B,[a,r]=Object(i.useState)(Array),[o,l]=Object(i.useState)(!0);Object(i.useEffect)(()=>{(async()=>{const e=await t.listDeceasedreceive({limit:10,offset:0});l(!1),r(e)})()},[o]);return n.a.createElement(h.a,{component:f.a},n.a.createElement(u.a,{className:e.table,"aria-label":"simple table"},n.a.createElement(p.a,null,n.a.createElement(v.a,null,n.a.createElement(w.a,{align:"center"},"เลขที่"),n.a.createElement(w.a,{align:"center"},"ชื่อ-สกุล"),n.a.createElement(w.a,{align:"center"},"ชื่อ-สกุล ของญาติ"),n.a.createElement(w.a,{align:"center"},"หมายเลขห้องเก็บศพ"),n.a.createElement(w.a,{align:"center"},"วัน/เดือน/ปี ที่เสียชีวิต"),n.a.createElement(w.a,{align:"center"},"ประเภทของศพผู้เสียชีวิต"),n.a.createElement(w.a,{align:"center"},"จัดการข้อมูล"))),n.a.createElement(m.a,null,a.map(e=>n.a.createElement(v.a,{key:e.id},n.a.createElement(w.a,{align:"center"},e.id),n.a.createElement(w.a,{align:"center"},e.dECEASEDNAME),n.a.createElement(w.a,{align:"center"}),n.a.createElement(w.a,{align:"center"}),n.a.createElement(w.a,{align:"center"},e.dEATHTIME),n.a.createElement(w.a,{align:"center"}),n.a.createElement(w.a,{align:"center"},n.a.createElement(E.a,{onClick:()=>{(async e=>{await t.deleteDeceasedreceive({id:e});l(!0)})(e.id)},style:{marginLeft:10},variant:"contained",color:"secondary"},"ลบข้อมูล")))))))}var K=a(58);var z=()=>n.a.createElement(s.e,{theme:s.h.home},n.a.createElement(s.c,{title:"ยินดีต้อนรับสู่ ระบบผู้เสียชีวิต",subtitle:""}),n.a.createElement(s.a,null,n.a.createElement(s.b,{title:"ตารางข้อมูลผู้เสียชีวิต"},n.a.createElement(K.a,{align:"left",style:{marginRight:16,color:"#00eeff"}},"นายแพทย์กำลัง นอนพอดี"),n.a.createElement("div",null,n.a.createElement(E.a,{variant:"contained",color:"primary"},"ออกจากระบบ"))),n.a.createElement(s.b,{title:""},n.a.createElement("div",null,n.a.createElement(s.d,{component:d.b,to:"/user"},n.a.createElement(E.a,{variant:"contained",color:"primary",style:{backgroundColor:"#21b6ae"}},"เพิ่มข้อมูลผู้เสียชีวิต")))),n.a.createElement("div",null),n.a.createElement(W,null))),Q=a(396),X=a(391),Z=a(282),ee=a(970),te=a(283),ae=a(382),re=a(286);const ie=Object(c.a)(e=>Object(Q.a)({root:{display:"flex",flexWrap:"wrap",justifyContent:"center"},margin:{margin:e.spacing(3)},withoutLabel:{marginTop:e.spacing(3)},textField:{width:"25ch"}})),ne="นายแพทย์กำลัง นอนพอดี";function oe(){const e=ie(),t=new B,[a,r]=Object(i.useState)(String),[o,l]=Object(i.useState)(!1),[c,u]=Object(i.useState)(!0),[m,w]=Object(i.useState)(Array),[h,p]=Object(i.useState)(Array),[v,f]=Object(i.useState)(Array),[y,R]=Object(i.useState)(!0),[g,O]=Object(i.useState)(String),[C,q]=n.a.useState(Number),[T,A]=n.a.useState(Number),[D,I]=n.a.useState(Number);Object(i.useEffect)(()=>{(async()=>{const e=await t.listCoolroomtype({limit:10,offset:0});R(!1),p(e)})();(async()=>{const e=await t.listCoolroom({limit:10,offset:0});R(!1),w(e)})();(async()=>{const e=await t.listRelative({limit:10,offset:0});R(!1),f(e)})()},[y]);return n.a.createElement(s.e,{theme:s.h.home},n.a.createElement(s.c,{title:"ยินดีต้อนรับสู่ ระบบผู้เสียชีวิต"}),n.a.createElement(s.a,null,n.a.createElement(s.b,{title:"เพิ่มข้อมูลผู้เสียชีวิต"},n.a.createElement(K.a,{align:"left",style:{marginRight:16,color:"#00eeff"}},ne),n.a.createElement("div",null,n.a.createElement(E.a,{variant:"contained",color:"primary"},"ออกจากระบบ")),o?n.a.createElement("div",null,c?n.a.createElement(ee.a,{severity:"success"},"This is a success alert — check it out!"):n.a.createElement(ee.a,{severity:"warning",style:{marginTop:20}},"This is a warning alert — check it out!")):null),n.a.createElement("div",{className:e.root},n.a.createElement("form",{noValidate:!0,autoComplete:"off"},n.a.createElement(Z.a,{className:e.margin,variant:"outlined"},n.a.createElement(X.a,{id:"name",label:"ชื่อ-นามสกุลผู้เสียชีวิต",variant:"outlined",type:"string",size:"medium",value:a,onChange:e=>{r(e.target.value)},style:{width:400}})),n.a.createElement("div",null,n.a.createElement(Z.a,{className:e.margin,variant:"outlined"},n.a.createElement(te.a,{id:"relative-label"},"ชื่อ-สกุล ญาติผู้เสียชีวิต"),n.a.createElement(re.a,{labelId:"relative-label",id:"relative",value:D,onChange:e=>{I(e.target.value)},style:{width:400}},v.map(e=>n.a.createElement(ae.a,{value:e.id},e.rELATIVENAME))))),n.a.createElement(Z.a,{className:e.margin,variant:"outlined"},n.a.createElement(te.a,{id:"status-death"},"ประเภทศพผู้เสียชีวิต"),n.a.createElement(re.a,{labelId:"status-death",id:"statusdeath",value:T,onChange:e=>{A(e.target.value)},style:{width:200}},h.map(e=>n.a.createElement(ae.a,{value:e.id},e.cOOLROOMTYPENAME)))),n.a.createElement("div",null,n.a.createElement(Z.a,{className:e.margin,variant:"outlined"},n.a.createElement(te.a,{id:"coolroom-label"},"หมายเลขห้องเย็น"),n.a.createElement(re.a,{labelId:"coolroom-label",id:"coolroom",value:C,onChange:e=>{q(e.target.value)},style:{width:200}},m.filter(e=>e.id===T).map(e=>n.a.createElement(ae.a,{value:e.id},e.cOOLROOMNAME)))),n.a.createElement(Z.a,{className:e.margin,variant:"outlined"},n.a.createElement(X.a,{id:"deathtime",label:"ว/ด/ป เวลาเสียชีวิต",type:"datetime-local",value:g,onChange:e=>{O(e.target.value)},className:e.textField,InputLabelProps:{shrink:!0}}))),n.a.createElement("div",{className:e.margin},n.a.createElement(E.a,{onClick:()=>{(async()=>{const e=await t.createDeceasedreceive({deceasedreceive:{dECEASEDID:1,dECEASEDNAME:"deceased",edges:{coolroomid:{id:1},doctorid:{id:1},relativeid:{id:1}},dEATHTIME:"deathtime"}});l(!0),""!=e.id?u(!0):u(!1);setTimeout(()=>{l(!1)},1e3)})()},variant:"contained",color:"primary"},"ยืนยัน"),n.a.createElement(E.a,{style:{marginLeft:20},component:d.b,to:"/",variant:"contained"},"กลับ"))))))}const le=Object(s.g)({id:"welcome",register({router:e}){e.registerRoute("/",z),e.registerRoute("/user",oe)}}),se=Object(s.f)({plugins:Object.values(r)}),de=se.getProvider(),ce=se.getRouter(),ue=se.getRoutes();var me=()=>n.a.createElement(de,null,n.a.createElement(ce,null,n.a.createElement(ue,null)));l.a.render(n.a.createElement(me,null),document.getElementById("root"))}},[[466,10,7,4,3,9,6,0,1,2,8,11]]]);
//# sourceMappingURL=main.c92b0c03.chunk.js.map