// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// CoolroomsColumns holds the columns for the "coolrooms" table.
	CoolroomsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "coolroom_name", Type: field.TypeString},
		{Name: "coolroomtype_id", Type: field.TypeInt, Nullable: true},
	}
	// CoolroomsTable holds the schema information for the "coolrooms" table.
	CoolroomsTable = &schema.Table{
		Name:       "coolrooms",
		Columns:    CoolroomsColumns,
		PrimaryKey: []*schema.Column{CoolroomsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "coolrooms_coolroom_types_coolrooms",
				Columns: []*schema.Column{CoolroomsColumns[2]},

				RefColumns: []*schema.Column{CoolroomTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CoolroomTypesColumns holds the columns for the "coolroom_types" table.
	CoolroomTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "coolroomtype_name", Type: field.TypeString},
	}
	// CoolroomTypesTable holds the schema information for the "coolroom_types" table.
	CoolroomTypesTable = &schema.Table{
		Name:        "coolroom_types",
		Columns:     CoolroomTypesColumns,
		PrimaryKey:  []*schema.Column{CoolroomTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// DeceasedReceivesColumns holds the columns for the "deceased_receives" table.
	DeceasedReceivesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "death_time", Type: field.TypeTime},
		{Name: "coolroom_id", Type: field.TypeInt, Nullable: true},
		{Name: "patient_id", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "relative_id", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
	}
	// DeceasedReceivesTable holds the schema information for the "deceased_receives" table.
	DeceasedReceivesTable = &schema.Table{
		Name:       "deceased_receives",
		Columns:    DeceasedReceivesColumns,
		PrimaryKey: []*schema.Column{DeceasedReceivesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "deceased_receives_coolrooms_deceasedreceives",
				Columns: []*schema.Column{DeceasedReceivesColumns[2]},

				RefColumns: []*schema.Column{CoolroomsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "deceased_receives_patients_deceasedreceives",
				Columns: []*schema.Column{DeceasedReceivesColumns[3]},

				RefColumns: []*schema.Column{PatientsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "deceased_receives_relatives_deceasedreceives",
				Columns: []*schema.Column{DeceasedReceivesColumns[4]},

				RefColumns: []*schema.Column{RelativesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "deceased_receives_users_deceasedreceives",
				Columns: []*schema.Column{DeceasedReceivesColumns[5]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PatientsColumns holds the columns for the "patients" table.
	PatientsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "patient_name", Type: field.TypeString},
		{Name: "patient_age", Type: field.TypeInt},
	}
	// PatientsTable holds the schema information for the "patients" table.
	PatientsTable = &schema.Table{
		Name:        "patients",
		Columns:     PatientsColumns,
		PrimaryKey:  []*schema.Column{PatientsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RelativesColumns holds the columns for the "relatives" table.
	RelativesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "relative_name", Type: field.TypeString},
	}
	// RelativesTable holds the schema information for the "relatives" table.
	RelativesTable = &schema.Table{
		Name:        "relatives",
		Columns:     RelativesColumns,
		PrimaryKey:  []*schema.Column{RelativesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_name", Type: field.TypeString},
		{Name: "useremail", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CoolroomsTable,
		CoolroomTypesTable,
		DeceasedReceivesTable,
		PatientsTable,
		RelativesTable,
		UsersTable,
	}
)

func init() {
	CoolroomsTable.ForeignKeys[0].RefTable = CoolroomTypesTable
	DeceasedReceivesTable.ForeignKeys[0].RefTable = CoolroomsTable
	DeceasedReceivesTable.ForeignKeys[1].RefTable = PatientsTable
	DeceasedReceivesTable.ForeignKeys[2].RefTable = RelativesTable
	DeceasedReceivesTable.ForeignKeys[3].RefTable = UsersTable
}
